# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy Environment
          when: on_fail
          command:  |
            "aws cloudformation delete-stack --stack-name myStack-f3023"

jobs:
  create-infastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: "Create Cloudformation"
          command: "aws cloudformation deploy \ --template-file template.yml \ --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \ --region us-east-1"
        #  command: "aws cloudformation deploy \ --template-file template.yml \ --stack-name myStack-f3023 \ --region us-east-1"
      - run: return 1
      - destroy_environment
 # configure-infrastructure:
  #  docker:
 #     - image: python:3.11-rc-alpine
 #   steps:
 #     - checkout
 #     - add_ssh_keys:
 #       # Added SSH fingerprints from project setting
 #         fingerprints: ["f9:f3:e1:94:16:e7:4f:02:0d:7d:16:bb:c5:84:06:b4"] 
 #     - run:
 #         name: "Configure Infrastructure"
 #         command: "apk add --update ansible"
 #     - run:
 #         name: "Run Playbook and configure server"
 #         command:  "ansible-playbook -i inventory main-remote.yml --private-key udacityprivate.pem"

  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
    #      command: |
    #        URL="https://blog.udacity.com/"
    #        if curl -s --head ${URL}
    #        then
    #          return 0
    #        else
    ##          return 1
    #        fi
          command:  return 1 
      - destroy_environment


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  myWorkflow:
    jobs:
      - create-infastructure
    #  - configure-infrastructure
    #  - smoke_test
    #      requires:
    #        - create-infastructure